{"version":3,"sources":["api/index.js","components/addForm.jsx","components/EmployeeTable.jsx","components/addButton.jsx","components/searchbar.jsx","App.js","index.js"],"names":["api","axios","create","baseURL","process","MONGODB_URI","apis","addEmployee","name","DOB","role","email","post","getAllEmployees","get","getEmployeesBySort","id","getEmployeesByName","AddForm","props","Form","onSubmit","handleFormSubmit","inUse","Group","controlId","Label","Control","type","placeholder","onChange","handleNameChange","handleEmailChange","handleRoleChange","handleDOBChange","Button","variant","EmployeeTable","Table","onClick","handleSort","employees","map","employee","key","_id","AddButton","renderForm","setState","usingForm","document","getElementById","setAttribute","event","state","target","value","Date","a","preventDefault","removeAttribute","then","res","result","data","filter","prevProps","this","Container","Component","SearchBar","search","handleInputChange","getElementsByClassName","className","App","fluid","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.20a0352d.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst api = axios.create({\n    baseURL: process.env.MONGODB_URI || 'http://localhost:8080',\n})\n// Call on the api routes in server/routes/apiRoutes\nexport const addEmployee = ({ name, DOB, role, email }) => api.post(\"./api/employee\", {name,DOB,role,email});\nexport const getAllEmployees = ()=>api.get(\"./api/employee\");\n// id is the data field to sort by\nexport const getEmployeesBySort = (id) => api.get(\"./api/employee/\"+id)\n// id is the name to filter the search by\nexport const getEmployeesByName = (id) => api.get(\"./api/employee/name/\" + id)\n\n\nconst apis = {\n    addEmployee,\n    getAllEmployees,\n    getEmployeesBySort,\n    getEmployeesByName\n}\n\nexport default apis;","import React from 'react';\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\n\n// Creates the add employee form. If props.inUse is false, it creates an empty form\nfunction AddForm(props){\n    return(\n        <Form onSubmit={props.handleFormSubmit}>\n        {props.inUse && \n            <div>\n                <Form.Group controlId=\"employeeForm\">\n                    <Form.Label>\n                        Name\n                    </Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Name\" onChange={props.handleNameChange}/>\n                    <Form.Label>\n                        Email\n                    </Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"email\" onChange={props.handleEmailChange}/>\n                    <Form.Label>\n                        Role\n                    </Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Role\" onChange={props.handleRoleChange}/>\n                    <Form.Label>\n                        DOB\n                    </Form.Label>\n                    <Form.Control type=\"date\" placeholder=\"DOB\" onChange={props.handleDOBChange}/>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"Submit\">\n                    Submit\n                </Button>\n            </div>}\n        </Form>\n    )\n}\nexport default AddForm;","import React from 'react';\nimport Table from \"react-bootstrap/Table\"\n\n// Creates a table of the employee fields\nfunction EmployeeTable(props) {\n    return(\n        <Table>\n            <thead>\n                <tr>\n                    <th id=\"name\" onClick={props.handleSort}>Name</th>\n                    <th id=\"email\" onClick={props.handleSort}>email</th>\n                    <th id=\"role\" onClick={props.handleSort}>Role</th>\n                    <th id=\"DOB\" onClick={props.handleSort}>DOB</th>\n                </tr>\n            </thead>\n            <tbody>\n\n            {props.employees.map(employee=>(\n                    <tr key={employee._id}>\n                        <td>{employee.name}</td>\n                        <td>{employee.email}</td>\n                    <td>{employee.role}</td>\n                    <td>{employee.DOB}</td>\n\n                    </tr>\n            ))}\n            </tbody>\n\n        </Table>\n    )\n\n    }\n\nexport default EmployeeTable;","// The add employee button component. Due to how data interacts, the employee table branches under this component\n\nimport React, { Component } from 'react';\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\"\nimport AddForm from \"./addForm\"\nimport api from \"../api\"\nimport EmployeeTable from \"./EmployeeTable\"\n\n// AddButton receives information from the searchBar. Searchbar informs this component if the employee table is currently being filtered.\nclass AddButton extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            usingForm: false,\n            name: \"\",\n            role: \"\",\n            DOB: \"\",\n            email: \"\",\n            result: [],\n            filter: props.filter\n        };\n    }\n    componentDidMount() {\n        api.getAllEmployees().then(res => {\n            this.setState({ ...this.state, result: res.data })\n        })\n    }\n    // Update if searchbar updates.\n    componentDidUpdate(prevProps){\n        if (this.props.filter !== prevProps.filter){\n            if(this.props.filter !== \"\"){\n                api.getEmployeesByName(this.props.filter).then(res=>{\n                    this.setState({ ...this.state, filter: this.props.filter, result: res.data })\n\n                })\n            }\n            else{\n                api.getAllEmployees().then(res => {\n                    this.setState({ ...this.state, filter: this.props.filter, result: res.data })\n                })\n            }\n        }\n    }\n    // When the add button is clicked, show the employee form and hide the button\n    renderForm=()=>{\n        this.setState({usingForm:true})\n        const addBtn = document.getElementById(\"add-btn\");\n        addBtn.setAttribute(\"hidden\", true);\n    };\n    // Update the appropriate fields on change\n    handleNameChange = event=>{\n        this.setState({...this.state,name:event.target.value})\n    };\n    handleEmailChange = event => {\n        this.setState({ ...this.state, email: event.target.value })\n    };\n    handleRoleChange = event => {\n        this.setState({ ...this.state, role: event.target.value })\n    };\n    handleDOBChange = event=>{\n        this.setState({ ...this.state, DOB: new Date(event.target.value)})\n    }\n    // When the submit button is clicked, do some checks and then add the employee to the database.\n    handleFormSubmit = async event=>{\n        event.preventDefault()\n        // Make sure all fields are filled in\n        if (!this.state.name || !this.state.role || !this.state.DOB || !this.state.email){\n            this.setState({...this.state, usingForm: false})\n            const addBtn = document.getElementById(\"add-btn\");\n            addBtn.removeAttribute(\"hidden\");\n            return;\n        }\n        // Reset the state and set the result array to all employees\n        api.addEmployee(this.state).then(()=>{\n            api.getAllEmployees().then(res => {\n       \n            this.setState({...this.state,\n                    usingForm: false,\n                    name: \"\",\n                    role: \"\",\n                    DOB: \"\",\n                    email: \"\",\n                    result: res.data\n            });\n            });\n        })\n\n        // Restore the button\n        const addBtn = document.getElementById(\"add-btn\");\n        addBtn.removeAttribute(\"hidden\");\n    }\n    // Manage when you sort the employees\n    handleSort=event=>{\n        // Pass the sorting method to the API then display the results.\n        api.getEmployeesBySort(event.target.id).then(res=>{\n            this.setState({...this.state, result:res.data})\n        })\n    }\n    render(){\n        return(\n            <Container>\n                <Button id=\"add-btn\" onClick={this.renderForm}>\n                    Add new Employee\n                </Button>\n                <AddForm \n                    inUse={this.state.usingForm}\n                    handleNameChange={this.handleNameChange}\n                    handleRoleChange={this.handleRoleChange}\n                    handleEmailChange={this.handleEmailChange}\n                    handleDOBChange={this.handleDOBChange}\n                    handleFormSubmit={this.handleFormSubmit}\n                />\n                <EmployeeTable \n                    employees={this.state.result} \n                    handleSort={this.handleSort}\n                />\n\n            </Container>\n        )\n    }\n}\nexport default AddButton;","import React, { Component } from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\"\nimport api from \"../api\"\nimport AddButton from \"./addButton\"\n//The search bar element. The filter element in the state determines what elements appear in the employee table\nclass SearchBar extends Component{\n    state={\n        search:\"\",\n        filter:\"\",\n    };\n    handleInputChange = event => {\n        this.setState({ search: event.target.value })\n    };\n    handleFormSubmit = event => {\n        event.preventDefault();\n        this.setState({...this.state, filter: this.state.search, search:\"\"});\n        document.getElementsByClassName(\"searchBar\")[0].value=\"\";\n    }\n    render(){\n        return (\n            <div>\n            <Form onSubmit={this.handleFormSubmit}>\n                <Form.Group controlId=\"searchform\">\n                    <Form.Label>\n                        Search By Name\n                    </Form.Label>\n                    <Form.Control className=\"searchBar\" type=\"text\" placeholder=\"Search\" onChange={this.handleInputChange}/>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"Submit\">\n                    Submit\n                </Button>\n            </Form>\n            <AddButton filter={this.state.filter}/>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport SearchBar from \"./components/searchbar\"\nimport AddButton from \"./components/addButton\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Container fluid>\n      <SearchBar/>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}